交接文档：
总体结构说明
	api:
		为小程序做准备，里面包含的全部是json返回的数据接口

		url：对应的url配置，目前未启用
		views：对应的view位置，目前未启用

	captcha:
		应该是验证码相关的内容，未改过，是之前一直存在的一个插件

	csinla:
		存放全局配置和urls所在

	cainla_accounts:
		存放一些账号相关的类，基本上帖子以外的都在这里
		view备注：
			login:此view已放弃，现在登录验证统一在SSO处理，这里的login是之前添加的现在已经被截断处理
			wx_login：微信登录，配合微信开放平台使用，此链接首次打开会跳转到微信提供的扫码登录页面，扫码成功后会携带code返回此链接，这时候会调用utils里面的wx_utils.py里面的方法来验证登录，获取以及记录用户信息等内容。验证成功后会跳转到SSO的登录页面（get携带open_it参数）
			wx_js：这里应该是留给微信验证用到
			RegisterView：注册，一直如此，基本很少改动
			Logout：这里登出操作也被sso里面的取代
			别的内容修改也不多，这里大部分比较稳定，较少需要修改
	csinla_curricular:
		选课相关的一个模块，目前稳定不太用修改
		这一块数据结构比较复杂（因为选课本身用的数据就很复杂），可以查看json和界面内容来理解一下。

	csinla_manage:
		新加的一个模块，因为有些人需要管理一些东西，但是这些人又不是内部管理员的角色（目前就是管理carfax），这里就额外独立出来一个app放一些这样的页面内容，当前是自己随意定义的没有系统设计的编码前端。具体的权限判断可以看代码段内容

	csinla_posts:
		帖子相关的内容都在这里
		帖子方面还算简单，基本就是増，删，改，查。増是发帖，删在我的帖子中删除，改在我的帖子中编辑，查针对的应该就是列表页和详情页内容
		留意一下评论和收藏的处理（可以花点功夫看一下代码实现过程，其实还算简单）

	django_comments:
		是个评论相关的插件，目前基本已经被废弃（评论功能已经通过别的手段内容部实现了）

	DjangoUeditor:
		一个富文本框插件，目前基本也不用了

	media:
		媒体文件夹

	operations:
		之前评论以及收藏回复等的衍生本地app，目前用的较少，我也不怎么用

	servermedia:
		现在已经废弃，线上统一叫media

	SSO:
		自己写的登录验证机制，其中包括一些页面统计内容
		原理还算简单，首次登陆时候通过用户名密码或者其他方式验证确认用户可用后，生成一个随机穿ticket，放在cookie里面。以后每次检查ticket就可以判断出当前用户。
	utils:
		公共方法集合
		包括一些邮箱，微信等方法，可以一个个文件查看一下了解具体内容
	wechat:
		目前还没有用起来，是留给将来小程序开发时候存储处理小程序微信信息相关的内容的一个app...如果不喜欢可以删掉

	werobot:
		个人比较喜欢的一个微信调用插件的源码，本来是打算拿来修改修改来做小程序相关的东西....如果不喜欢可以删掉

个别介绍：
	SSO：
		SSO全称Single Sign On。也就是单点登录，django本身就有一套SSO机制，但是系统给定的无法修改（或者说太复杂不好驾驭）。当前项目SSO是自己额外写的，基本原理是登录时候根据当前用户信息创建一个ticket，然后把生成的ticket字符串存在cookie中，以后每次访问携带ticket即可

	微信开放平台登录：
		微信登录原理可以参考一下微信开放平台的文档，基本就是申请微信登录方式，然后用户扫码相关微信提供的页面后，微信会携带code参数访问制指定的页面，通过appid和appscrect以及当前code可以获取本人的访问token，通过token以及openid可以从微信处获取此人的用户信息。

	浏览记录：
		在新的SSO中有个记录当前用户浏览信息的地方，浏览信息包括ip，被访问页面地址等，如果用户已登录还会记录下来用户信息。通过一些对比匹配可以生成一些记录统计。
